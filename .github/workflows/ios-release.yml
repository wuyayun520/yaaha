name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/yaaha.ipa"
          APPLE_ID: "lixiaotong@bcrunyuan.shop"
          APP_SPECIFIC_PASSWORD: "hvej-jhnt-rxjf-bdgw"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
